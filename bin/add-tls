#!/usr/bin/env bash

cd "$(dirname ${BASH_SOURCE[0]})/../" || exit 1

#
# Functions
#
run_cmd() {
  local cmd
  cmd="$*"
  echo "$(tput bold)==> $*$(tput sgr0)"
  eval "$cmd"

  export EXIT_STATUS=$?

  if [ "$EXIT_STATUS" != "0" ]; then
    echo "$(tput setaf 124)Failed ($EXIT_STATUS):$(tput sgr0) $cmd"
  fi
}

write_session() {
  cat <<EOF
---
hostname: '$SERVER'
with_tls: 'yes'
wp_db_pass: '$WP_DB_PASS'
EOF
}

write_hosts() {
  cat <<EOF
[default]
$SERVER ansible_ssh_host=$SERVER
EOF
}

write_conf() {
cat <<EOF
[defaults]
private_key_file=$IDENTITY
host_key_checking = False
control_path = %(directory)s/%%h-%%r
inventory = $(pwd)/hosts

[ssh_connection]
scp_if_ssh=True
EOF
}

# If session variables don't exist
if [ ! -f session.yml ]; then
  #
  # Set/export variables
  #
  ANSIBLE_CONFIG="$(pwd)/ansible.cfg"
  export ANSIBLE_CONFIG

  echo -n "Enter the domain name: "
  read -r SERVER
  export SERVER

  echo -n "Specify path to SSH private key (defaults to ~/.ssh/id_rsa): "
  read -r -e IDENTITY
  IDENTITY=${IDENTITY:-"$HOME/.ssh/id_rsa"}
  export IDENTITY

  echo
  echo -n "Enter password for the MariaDB wordpress user: "
  read -r -s WP_DB_PASS
  export WP_DB_PASS
  echo

  write_hosts > hosts
  write_conf > ansible.cfg

  write_session > session.yml
  chmod 0600 session.yml
fi

run_cmd "ansible-playbook tls.yml -vv --ask-become-pass "
if [ "$EXIT_STATUS" == "0" ]; then
  rm hosts ansible.cfg session.yml
  echo "Provisioning complete."
  echo
  echo "$SERVER now has a TLS certificate and can be reached at https://$SERVER"
else
  echo
  echo "$(tput bold)==> Configuration saved to session.yml$(tput sgr0)"
  echo 'Re-run `bin/create`, or delete session.yml NOW.'
  echo
fi
