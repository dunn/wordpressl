---
- name: clone acme-tiny repo
  git:
    repo: https://github.com/diafygi/acme-tiny.git
    dest: /home/{{ deploy_user }}/acme-tiny
    # This is the latest commit; update as necessary
    version: daba51d37efd7c1f205f9da383b9b09968e30d29
  become: true
  become_user: "{{ deploy_user }}"

- name: create ACME directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
  with_items:
    - "{{ project_dir }}/.well-known/acme-challenge"
    - /home/{{ deploy_user }}/ssl

# https://letsencrypt.org/how-it-works/
# https://github.com/diafygi/acme-tiny#how-to-use-this-script
# https://github.com/diafygi/letsencrypt-nosudo#how-to-use-the-signing-script
- name: create TLS user private key
  shell: openssl genrsa 4096 > /home/{{ deploy_user }}/ssl/acme.key
  args:
    creates: /home/{{ deploy_user }}/ssl/acme.key
  become: true
  become_user: "{{ deploy_user }}"

- name: create TLS domain private key
  shell: openssl genrsa 4096 > /etc/ssl/certs/{{ hostname }}.key
  args:
    creates: /etc/ssl/certs/{{ hostname }}.key

- name: set permissions on TLS domain private key
  file:
    path: /etc/ssl/certs/{{ hostname }}.key
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"

- name: copy default OpenSSL config
  copy:
    remote_src: yes
    src: /etc/pki/tls/openssl.cnf
    dest: /home/{{ deploy_user }}/ssl/{{ hostname }}.cnf
  become: true
  become_user: "{{ deploy_user }}"

- name: add DNS info to local config
  shell: printf "[SAN]\nsubjectAltName=DNS:{{ hostname }},DNS:www.{{ hostname }}" >> /home/{{ deploy_user }}/ssl/{{ hostname }}.cnf
  become: true
  become_user: "{{ deploy_user }}"

- name: create Certificate Signing Request
  shell: 'openssl req -new -sha256 -key /etc/ssl/certs/{{ hostname }}.key -subj "/" -reqexts SAN -config /home/{{ deploy_user }}/ssl/{{ hostname }}.cnf > /home/{{ deploy_user }}/ssl/{{ hostname }}.csr'
  args:
    creates: /home/{{ deploy_user }}/ssl/{{ hostname }}.csr
  become: true
  become_user: "{{ deploy_user }}"

- name: get certificate from Let’s Encrypt
  shell: python3 /home/{{ deploy_user }}/acme-tiny/acme_tiny.py \
         --account-key /home/{{ deploy_user }}/ssl/acme.key \
         --csr /home/{{ deploy_user }}/ssl/{{ hostname }}.csr \
         --acme-dir {{ project_dir }}/.well-known/acme-challenge/ \
         > /etc/ssl/certs/{{ hostname }}.crt
  args:
    creates: /etc/ssl/certs/{{ hostname }}.crt

- name: set permissions on certificate
  file:
    path: /etc/ssl/certs/{{ hostname }}.crt
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"

# This is an intermediate certificate; it's not strictly required but
# not having it will cap your Qualys ranking at B
- name: download Let’s Encrypt X3 certificate
  get_url:
    url: https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem
    checksum: sha256:e446c5e9dbef9d09ac9f7027c034602492437a05ff6c40011d7235fca639c79a
    dest: /etc/ssl/certs/lets-encrypt-x3-cross-signed.pem

- name: set up certificate renewal
  cron:
    name: "ACME renewal"
    special_time: monthly
    job: python3 /home/{{ deploy_user }}/acme-tiny/acme_tiny.py \
         --account-key /home/{{ deploy_user }}/ssl/acme.key \
         --csr /home/{{ deploy_user }}/ssl/{{ hostname }}.csr \
         --acme-dir {{ project_dir }}/.well-known/acme-challenge/ \
         > /etc/ssl/certs/{{ hostname }}.crt 2>> /var/log/acme_error.log
    cron_file: acme_renewal
    user: "{{ deploy_user }}"

- name: make ACME log writeable by {{ deploy_user }}
  become: yes
  file:
    path: /var/log/acme_error.log
    state: touch
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
